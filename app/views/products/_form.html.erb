<div class="container mt-5">
  <%= form_with(model: @product, local: true) do |form| %>
    <% if @product.errors.any? %>
      <div class="text-center" style="color: red">
        <h2><%= pluralize(@product.errors.count, "error") %> prohibited this product from being saved:</h2>
        <ul>
          <% @product.errors.each do |error| %>
            <li><%= error.full_message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>

    <div class="mb-3 row justify-content-center align-items-center">
      <div class="col-md-2">
        <%= form.label :name, "Name:", class: "form-label" %>
      </div>
      <div class="col-md-8">
        <%= form.text_field :name, class: "form-control form-control-sm", style: "max-width: 300px; margin: auto;" %>
      </div>
    </div>

    <div class="mb-3 row justify-content-center align-items-center">
      <div class="col-md-2">
        <%= form.label :description, "Description:", class: "form-label" %>
      </div>
      <div class="col-md-8">
        <%= form.text_area :description, class: "form-control form-control-sm", style: "max-width: 300px; margin: auto;" %>
      </div>
    </div>

    <div class="mb-3 row justify-content-center align-items-center">
      <div class="col-md-2">
        <%= form.label :price, "Price:", class: "form-label" %>
      </div>
      <div class="col-md-8">
        <%= form.text_field :price, class: "form-control form-control-sm", style: "max-width: 300px; margin: auto;" %>
      </div>
    </div>

    <div class="mb-3 row justify-content-center align-items-center">
      <div class="col-md-2">
        <%= form.label :stock, "Stock:", class: "form-label" %>
      </div>
      <div class="col-md-8">
        <%= form.number_field :stock, class: "form-control form-control-sm", style: "max-width: 300px; margin: auto;" %>
      </div>
    </div>

    <div class="mb-3 text-center">
      <%= label_tag :new_category, "Añadir Nueva Categoría", style: "display: block" %>
      <%= text_field_tag :new_category, "", placeholder: "Escribe una nueva categoría", class: "new-category-input form-control form-control-sm", style: "max-width: 300px; margin: auto;" %>
      <%= button_tag "Añadir Categoría", type: :button, id: "add-category-btn", class: "btn btn-primary mt-2" %>
    </div>

    <div id="category_ids" class="text-center">
      <div class="row justify-content-center">
        <% Category.all.each do |category| %>
          <div class="col-6 col-sm-4 col-md-3 col-lg-2 mb-2">
            <div class="border rounded p-2 text-center">
              <%= check_box_tag "product[category_ids][]", category.id, @product.category_ids.include?(category.id) %>
              <%= label_tag "product_category_ids_#{category.id}", category.name, class: "form-check-label" %>
            </div>
          </div>
        <% end %>
      </div>
    </div>

    <div class="text-center">
      <%= form.submit class: "btn btn-success mt-3" %>
    </div>
  <% end %>
</div>





<script>
  document.addEventListener("DOMContentLoaded", () => {
    // Escucha el botón "Añadir Categoría"
    document.getElementById("add-category-btn").addEventListener("click", function() {
      const newCategoryInput = document.querySelector(".new-category-input");
      const categoryName = newCategoryInput.value.trim();

      if (categoryName) {
        // Solicitud AJAX para crear una nueva categoría
        fetch("/categories", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "X-CSRF-Token": document.querySelector("[name='csrf-token']").content
          },
          body: JSON.stringify({ category: { name: categoryName } })
        })
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.json(); // Devuelve la respuesta en formato JSON
        })
        .then(data => {
          if (data && data.id) {
            // Crea el nuevo elemento en la lista de categorías
            const categoryCheckboxesContainer = document.querySelector("#category_ids"); // Asegúrate de que esto apunte a la parte correcta de tu HTML

            // Crea un nuevo div para la nueva categoría
            const newCheckboxDiv = document.createElement("div");
            
            const newCheckbox = document.createElement("input");
            newCheckbox.type = "checkbox";
            newCheckbox.id = `category_${data.id}`;
            newCheckbox.value = data.id;
            newCheckbox.name = "product[category_ids][]"; // Asegúrate de que esto sea correcto para que se envíe con el formulario

            const newLabel = document.createElement("label");
            newLabel.htmlFor = `category_${data.id}`;
            newLabel.innerText = data.name;

            // Agrega el nuevo checkbox y la etiqueta al div
            newCheckboxDiv.appendChild(newCheckbox);
            newCheckboxDiv.appendChild(newLabel);
            categoryCheckboxesContainer.appendChild(newCheckboxDiv); // Añade la nueva categoría al contenedor de categorías

            newCategoryInput.value = ""; // Limpia el campo de entrada
          }
        })
        .catch(error => console.error("Error al crear la categoría:", error));
      }
    });
  });
</script>
